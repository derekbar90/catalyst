version: "3.0"

services:

  api:
    build:
      context: .
    image: atom
    env_file: docker-compose.env
    networks:
      - atom
    environment:
      SERVICES: api
      PORT: 3000
    links:
      - nats
      - redis
    depends_on:
      - nats
      - redis
      - postgresd
    labels:
      - "traefik.enable=true"
      - "traefik.backend=api"
      - "traefik.port=3000"
      - "traefik.frontend.entryPoints=http"
      - "traefik.frontend.rule=PathPrefix:/"

  greeter:
    build:
      context: .
    image: atom
    env_file: docker-compose.env
    networks:
      - atom
    environment:
      SERVICES: greeter
    links:
      - nats
      - redis
    depends_on:
      - nats
      - redis
      - postgresd

  nats:
    image: nats
    networks:
      - atom

  redis:
    image: redis:alpine
    networks:
      - atom

  postgresd:
    image: postgres:9.6
    restart: always
    networks:
      - atom
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file: docker-compose.env

  traefik:
    image: traefik:v1.7.16
    command: --web --docker --docker.domain=docker.localhost --logLevel=INFO --docker.exposedbydefault=false
    ports:
      - "3000:80"
      - "3001:8080"
    networks:
      - atom
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/null:/traefik.toml

  hydra-migrate:
    image: oryd/hydra:latest
    networks:
      - atom
    environment:
      - DSN=postgres://postgres_user:password@postgresd:5432/postgres?sslmode=disable&max_conns=20&max_idle_conns=4
    command:
      migrate sql -e --yes
    restart: on-failure

  hydra:
    image: oryd/hydra
    depends_on:
      - hydra-migrate
    networks:
      - atom
    environment:
      - DSN=postgres://postgres_user:password@postgresd:5432/postgres?sslmode=disable&max_conns=20&max_idle_conns=4

volumes:
  hydra-store:
    driver: local

networks:
  atom:
    driver: bridge
