version: "3.0"

services:

  api:
    build:
      context: ./api
    image: atom
    env_file: docker-compose.env
    networks:
      - atom
    volumes:
      - api:/app/node_modules
      - ./api:/app/:delegated #delegates speeds up mac os volumes
    command:
      - ./wait-for-it.sh
      - postgresd:5432
      - --
      - make
      - start-service
    environment:
      SERVICES: api
      PORT: 3000
    links:
      - nats
      - redis
    depends_on:
      - nats
      - redis
      - postgresd
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.backend=api"
      - "traefik.port=3000"
      - "traefik.frontend.rule=Host:funk.derekbarrera.com"

  user:
    build:
      context: ./user
    image: atom
    env_file: docker-compose.env
    networks:
      - atom
    volumes:
      - user:/app/node_modules
      - ./user:/app/:delegated #delegates speeds up mac os volumes
    command:
      - ./wait-for-it.sh
      - postgresd:5432
      - --
      - make
      - start-service
    environment:
      SERVICES: user
    links:
      - nats
      - redis
    depends_on:
      - nats
      - redis
      - postgresd
      - traefik

  nats:
    image: nats
    ports:
      - "4222:4222"
    networks:
      - atom

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - atom

  postgresd:
    image: postgres:9.6
    restart: always
    networks:
      - atom
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file: docker-compose.env


  traefik:
    image: traefik:alpine
    command: 
      - --configFile=/traefik.toml
      - --web
      - --logLevel=INFO 
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    networks:
      - atom
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.toml:/traefik.toml
      - ./traefik/acme.json:/acme.json

  hydra-migrate:
    image: oryd/hydra:latest
    networks:
      - atom
    environment:
      - DSN=postgres://postgres_user:password@postgresd:5432/postgres?sslmode=disable&max_conns=20&max_idle_conns=4
    command:
      migrate sql -e --yes
    depends_on:
      - postgresd
    restart: on-failure

  hydra:
    image: oryd/hydra:latest
    volumes:
      - ./hydra/.hydra.yaml:/.hydra.yaml:delegated
    links:
      - postgresd:postgresd
    depends_on:
      - postgresd
      - hydra-migrate
    networks:
      - atom
    ports:
      - "4444:4444"
      - "4445:4445"
    command:
      serve all --dangerous-force-http --config=/.hydra.yaml
    environment:
      - DSN=postgres://postgres_user:password@postgresd:5432/postgres?sslmode=disable&max_conns=20&max_idle_conns=4
    restart: on-failure


volumes:
  api:
    driver: local
  user:
    driver: local

networks:
  atom:
    driver: bridge
